name: Run Protractor Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    # - name: Download and update ChromeDriver
    #   run: npx webdriver-manager update --versions.chrome $(npx chromedriver --version | grep -oP '\d+\.\d+\.\d+')

    - name: Download and update ChromeDriver
      run: |
        $chromeVersion = (npx chromedriver --version) -match '\d+\.\d+\.\d+'
        if ($matches[0]) {
          npx webdriver-manager update --versions.chrome $matches[0]
        } else {
          Write-Error "Failed to determine ChromeDriver version"
        }
      shell: pwsh

    - name: Start Selenium server
      run: |
       Start-Process 'npx' -ArgumentList 'webdriver-manager start' -NoNewWindow; Start-Sleep -Seconds 10
      shell: pwsh

    # - name: Start Selenium server
    #   run: Start-Process 'npx' -ArgumentList 'webdriver-manager start' -NoNewWindow; Start-Sleep -Seconds 10
    #   shell: pwsh

    # - name: Wait for Selenium server
    #   run: |
    #     $url = 'http://localhost:4444/wd/hub'
    #     $maximumWaitTimeInSeconds = 120
    #     $start = Get-Date
    #     $serverReady = $false

    #     do {
    #       try {
    #         $webRequest = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 1
    #         if ($webRequest.StatusCode -eq 200) {
    #           Write-Host "Selenium server is ready!"
    #           $serverReady = $true
    #         }
    #       } catch {
    #         # Output the exception message for debugging
    #         Write-Host $_.Exception.Message
    #         # Do nothing, just continue waiting
    #       }
    #       Start-Sleep -Seconds 1
    #     }
    #     while (-not $serverReady -and (New-TimeSpan -Start $start).TotalSeconds -lt $maximumWaitTimeInSeconds)

    #     if (-not $serverReady) {
    #       Write-Host "Selenium server did not start within the maximum wait time."
    #       exit 1
    #     }
    #   shell: pwsh
    
    - name: Run Protractor tests
      run: npx protractor protractor.conf.js
